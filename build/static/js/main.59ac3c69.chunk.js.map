{"version":3,"sources":["features/todoSlice.js","components/PopOver/PopOver.js","components/input/Input.js","components/Date/ShowDate.js","components/Edit/EditModal.js","components/TodoItem/TodoItem.js","components/Pagination/PaginationComponent.js","components/Pagination/pagination.js","App.js","app/store.js","index.js"],"names":["initialState","todoList","item","done","date","Date","now","toLocaleString","finishDate","id","todoSlice","createSlice","name","reducers","saveTodo","state","action","push","payload","setCheck","map","updateTodo","deleteTodo","filter","comment","actions","selectTodoList","todos","PopOver","open","toggleOpen","inputEl","console","log","Popover","onClose","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Box","p","Typography","Input","useState","setOpen","dispatch","useDispatch","input","setInput","buttonRef","useRef","className","ref","type","placeholder","value","onChange","e","target","Button","variant","color","onClick","trim","current","ShowDate","openHandler","finish","EditModal","handleClose","newValue","setnewValue","Dialog","aria-labelledby","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","label","defaultValue","DialogActions","alert","TodoItem","editOpen","setEditOpen","dateRef","editHandler","length","slice","PaginationComponent","count","page","handleChange","Pagination","usePagination","data","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","next","min","prev","max","jump","pageNumber","currentData","begin","end","App","useSelector","sortArray","sort","a","b","setPage","_DATA","todo","key","configureStore","reducer","todoReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.59ac3c69.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  todoList: [\n    {\n      item: \"Write mail to Johnssssssssssssssssss Johnssdasdasdasdasdadasssdadasda\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now(),\n    },\n    {\n      item: \"Take out the trash\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 666,\n    },\n    {\n      item: \"Buy milk.\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 555,\n    },\n    {\n      item: \"Exercise\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 334,\n    },\n    {\n      item: \"Sleep on the couch\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 112,\n    },\n    {\n      item: \"Play with Hamster\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 223,\n    },\n    {\n      item: \"Watch movie.\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 123,\n    },\n    {\n      item: \"Show a magic trick\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 822,\n    },\n    {\n      item: \"Do completely nothing.\",\n      done: true,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 402,\n    },\n    {\n      item: \"Act Normal\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 204,\n    },\n    {\n      item: \"Be normal?\",\n      done: false,\n      date: new Date(Date.now()).toLocaleString(),\n      finishDate: \"\",\n      id: Date.now() + 332,\n    },\n  ],\n};\n\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    saveTodo: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    setCheck: (state, action) => {\n      state.todoList.map((item) => {\n        if (action.payload === item.id) {\n          if (item.done === true) {\n            item.done = false;\n            item.finishDate = \"\";\n          } else {\n            item.done = true;\n            item.finishDate = new Date(Date.now()).toLocaleString();\n          }\n        }\n      });\n    },\n    updateTodo: (state = initialState, action) => {\n      state.todoList.map((item) => {\n        if (action.payload.id === item.id) {\n          item.item = action.payload.item;\n          item.date = action.payload.date;\n        }\n      });\n    },\n    deleteTodo: (state = initialState, action) => {\n      return {\n        todoList: [\n          ...state.todoList.filter((comment) => comment.id !== action.payload),\n        ],\n      };\n    },\n  },\n});\n\nexport const { saveTodo, setCheck, updateTodo, deleteTodo } = todoSlice.actions;\n\nexport const selectTodoList = (state) => state.todos.todoList;\n\nexport default todoSlice.reducer;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Popover from \"@material-ui/core/Popover\";\n\nconst PopOver = ({ open, toggleOpen, inputEl }) => {\n  console.log(inputEl);\n  return (\n    <>\n      <Popover\n        open={open}\n        onClose={toggleOpen}\n        anchorEl={inputEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n      >\n        <Box p={2}>\n          <Typography>Please type in something.</Typography>\n        </Box>\n      </Popover>\n    </>\n  );\n};\n\nexport default PopOver;\n","import React, { useState, useRef } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Input.css\";\n\nimport { saveTodo } from \"../../features/todoSlice\";\nimport { useDispatch } from \"react-redux\";\nimport PopOver from \"../PopOver/PopOver\";\n\nconst Input = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState(\"\");\n\n  const buttonRef = useRef();\n\n  const toggleOpen = () => {\n    setOpen(!open);\n  };\n\n  const addTodo = () => {\n    if (input.trim() !== \"\") {\n      dispatch(\n        saveTodo({\n          item: input,\n          done: false,\n          date: new Date(Date.now()).toLocaleString(),\n          finishDate: \"\",\n          id: Date.now(),\n        })\n      );\n      setInput(\"\");\n    } else {\n      setOpen(true);\n    }\n  };\n\n  return (\n    <div className=\"input\" ref={buttonRef}>\n      <input\n        type=\"text\"\n        placeholder=\"Whatcha Doin...\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={addTodo} >\n        Add!\n      </Button>\n      {open && (\n        <PopOver\n          open={open}\n          toggleOpen={toggleOpen}\n          inputEl={buttonRef.current}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Popover from \"@material-ui/core/Popover\";\n\nconst ShowDate = ({ open, date, openHandler, finish, anchorEl }) => {\n  return (\n    <Popover\n      anchorEl={anchorEl}\n      open={open}\n      onClose={openHandler}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n    >\n      <Box p={2}>\n        <Typography>Created Date: {date}</Typography>\n        {finish !== \"\" && <Typography>Finished Date: {finish}</Typography>}\n      </Box>\n    </Popover>\n  );\n};\n\nexport default ShowDate;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { updateTodo } from \"../../features/todoSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst EditModal = ({ open, handleClose, id, name }) => {\n  const [newValue, setnewValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSave = () => {\n    if (newValue !== \"\" && newValue !== name) {\n      dispatch(\n        updateTodo({\n          id,\n          item: newValue,\n          date: new Date(Date.now()).toLocaleString(),\n        })\n      );\n      handleClose();\n    } else {\n      alert(\"Change value or press cancel :)\");\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Todo.</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"text\"\n            label=\"Edit\"\n            type=\"text\"\n            defaultValue={name}\n            onChange={(e) => setnewValue(e.target.value)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default EditModal;\n","import React, { useState, useRef } from \"react\";\nimport \"./TodoItem.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setCheck, deleteTodo } from \"../../features/todoSlice\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport ShowDate from \"../Date/ShowDate\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport EditModal from \"../Edit/EditModal\";\n\nconst TodoItem = ({ name, done, id, date, finish }) => {\n  const [open, setOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n\n  const dateRef = useRef();\n\n  const openHandler = () => {\n    setOpen(!open);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleCheck = (e) => {\n    dispatch(setCheck(id));\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteTodo(id));\n  };\n\n  const editHandler = () => {\n    setEditOpen(!editOpen);\n  };\n\n  return (\n    <div className=\"todoItem\">\n      <div className=\"isDone\" onClick={handleCheck}>\n        {done ? (\n          <DoneIcon className=\"icon icon-done\" />\n        ) : (\n          <ClearIcon className=\"icon icon-notDone\" />\n        )}\n      </div>\n      <p className={done ? \"todoItem--done\" : \"\"}>\n        {name.length < 35 ? name : `${name.slice(0, 30)}...`}\n      </p>\n      <EditIcon className=\"icon icon-edit\" onClick={editHandler} />\n      <DeleteIcon className=\"icon icon-delete\" onClick={deleteHandler} />\n      <MoreVertIcon\n        className=\"icon icon-menu\"\n        onClick={openHandler}\n        ref={dateRef}\n      />\n      {open ? (\n        <ShowDate\n          open={open}\n          date={date}\n          done={done}\n          openHandler={openHandler}\n          anchorEl={dateRef.current}\n          finish={finish}\n        />\n      ) : null}\n      {editOpen ? (\n        <EditModal\n          open={editOpen}\n          handleClose={editHandler}\n          id={id}\n          name={name}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import Pagination from \"@material-ui/lab/Pagination\";\n\nconst PaginationComponent = ({ count, page, handleChange }) => {\n  return (\n    <Pagination\n      count={count}\n      page={page}\n      color=\"primary\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default PaginationComponent;\n","import { useState } from \"react\";\n\nfunction usePagination(data, itemsPerPage) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const maxPage = Math.ceil(data.length / itemsPerPage);\n\n  function currentData() {\n    const begin = (currentPage - 1) * itemsPerPage;\n    const end = begin + itemsPerPage;\n    return data.slice(begin, end);\n  }\n\n  function next() {\n    setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\n  }\n\n  function prev() {\n    setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\n  }\n\n  function jump(page) {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage((currentPage) => Math.min(pageNumber, maxPage));\n  }\n\n  return { next, prev, jump, currentData, currentPage, maxPage };\n}\n\nexport default usePagination;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/input/Input\";\nimport TodoItem from \"./components/TodoItem/TodoItem\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectTodoList } from \"./features/todoSlice\";\nimport PaginationComponent from \"./components/Pagination/PaginationComponent\";\nimport usePagination from \"./components/Pagination/pagination\";\n\nfunction App() {\n  const todoList = useSelector(selectTodoList);\n  const obj = [...todoList];\n  const sortArray = obj.sort((a, b) => (a.id < b.id ? 1 : -1));\n  const [page, setPage] = useState(1);\n  const amountPerPage = 8;\n  const count = Math.ceil(todoList.length / amountPerPage);\n  const _DATA = usePagination(sortArray, amountPerPage);\n\n  const handleChange = (e, p) => {\n    setPage(p);\n    _DATA.jump(p);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app_container\">\n        <div className=\"app_todoContainer\">\n          {todoList.length !== 0 ? (\n            _DATA\n              .currentData()\n              .map((todo, key) => (\n                <TodoItem\n                  name={todo.item}\n                  done={todo.done}\n                  id={todo.id}\n                  date={todo.date}\n                  finish={todo.finishDate}\n                  key={key}\n                />\n              ))\n          ) : (\n            <p className=\"empty\">Sorry but list is empty...</p>\n          )}\n          {todoList.length > amountPerPage && (\n            <PaginationComponent\n              page={page}\n              count={count}\n              handleChange={handleChange}\n            />\n          )}\n        </div>\n        <Input />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoReducer from \"../features/todoSlice\";\n\nexport default configureStore({\n  reducer: {\n    todos: todoReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}